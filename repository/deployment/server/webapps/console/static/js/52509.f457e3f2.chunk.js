"use strict";(self.webpackChunk_wso2is_console=self.webpackChunk_wso2is_console||[]).push([[52509],{52509:(n,e,t)=>{t.r(e),t.d(e,{tomcatSAMLAgentDockerEnvCode:()=>c,tomcatSAMLAgentLoginButtonCode:()=>s,tomcatSAMLAgentLogoutCode:()=>l,tomcatSAMLAgentMavenDependencyCode:()=>a,tomcatSAMLAgentSamplePropertiesCode:()=>o,tomcatSAMLAgentSampleWebXMLCode:()=>i,wso2InternalRepoPointingCode:()=>r});var a=function(){return"<dependency>\n    <groupId>io.asgardeo.tomcat.saml.agent</groupId>\n    <artifactId>io.asgardeo.tomcat.saml.agent</artifactId>\n    <version>0.1.31</version>\n</dependency>"},r=function(){return"<repositories>\n    <repository>\n        <id>wso2.releases</id>\n        <name>WSO2 internal Repository</name>\n        <url>http://maven.wso2.org/nexus/content/repositories/releases/</url>\n        <releases>\n            <enabled>true</enabled>\n            <updatePolicy>daily</updatePolicy>\n            <checksumPolicy>ignore</checksumPolicy>\n        </releases>\n    </repository>\n</repositories>"},o=function(n,e){var t;if(!n)return"";var a=e&&""!==e?e:"<YOUR_APP_PATH>",r=void 0!==n.enableResponseSigning&&n.enableResponseSigning,o=void 0!==n.enableRequestSigning&&n.enableRequestSigning,i=void 0===n.enableSLO||n.enableSLO,s=void 0!==n.enableAssertionEncryption&&n.enableAssertionEncryption;return"SAML2.AssertionConsumerURL=".concat(n.acsURL,"\nSAML2.SPEntityId=").concat(n.samlIssuer,"\nSAML2.IdPEntityId=").concat(n.issuer,"\nSAML2.IdPURL=").concat(n.ssoUrl,"\nSkipURIs=").concat(a,"/index.html\nSAML2SSOURL=samlsso\nIndexPage=index.html\nErrorPage=/error.jsp\nEnableSAML2SSOLogin=true\nSAML2.EnableSLO=").concat(i,"\nSAML2.SLOURL=logout\nSAML2.EnableResponseSigning=").concat(r,"\nSAML2.EnableAssertionSigning=false\nSAML2.EnableAssertionEncryption=").concat(s,"\nSAML2.EnableRequestSigning=").concat(o,"\nSAML2.IsPassiveAuthn=false\nIdPPublicCert=").concat(null===(t=n.certificate)||void 0===t?void 0:t.replace(/(\r\n|\n|\r)/gm,""),"\nKeyStorePassword=<PASSWORD>\nPrivateKeyAlias=<ALIAS>\nIdPPublicCertAlias=wso2carbon\nPrivateKeyPassword=wso2carbon")},i=function(){return"<filter>\n    <filter-name>SAML2SSOAgentFilter</filter-name>\n    <filter-class>io.asgardeo.tomcat.saml.agent.SAML2SSOAgentFilter</filter-class>\n</filter>\n<filter-mapping>\n    <filter-name>SAML2SSOAgentFilter</filter-name>\n    <url-pattern>*.jsp</url-pattern>\n</filter-mapping>\n<filter-mapping>\n    <filter-name>SAML2SSOAgentFilter</filter-name>\n    <url-pattern>*.html</url-pattern>\n</filter-mapping>\n<filter-mapping>\n    <filter-name>SAML2SSOAgentFilter</filter-name>\n    <url-pattern>/samlsso</url-pattern>\n</filter-mapping>\n<filter-mapping>\n    <filter-name>SAML2SSOAgentFilter</filter-name>\n    <url-pattern>/logout</url-pattern>\n</filter-mapping>\n\n<listener>\n    <listener-class>io.asgardeo.tomcat.saml.agent.SSOAgentContextEventListener</listener-class>\n</listener>\n<context-param>\n    <param-name>property-file</param-name>\n    <param-value>sample-app.properties</param-value>\n</context-param>\n<context-param>\n    <param-name>certificate-file</param-name>\n    <param-value>KEYSTORE_FILE_NAME</param-value>\n</context-param>"},s=function(){return'<form action="home.jsp" method="post">\n    <input type="submit" value="log in">\n</form>'},l=function(){return'<form action="logout?SAML2.HTTPBinding=HTTP-POST" method="get">\n    <input type="submit" value="Log Out">\n</form>'},c=function(n){var e,t=n.tomcatHost&&""!==n.tomcatHost?n.tomcatHost:"<TOMCAT_HOST>",a=void 0!==n.enableResponseSigning&&n.enableResponseSigning,r=void 0!==n.enableRequestSigning&&n.enableRequestSigning,o=void 0===n.enableSLO||n.enableSLO,i=void 0!==n.enableAssertionEncryption&&n.enableAssertionEncryption;return"SAML2.AssertionConsumerURL=".concat(t,"/sample-app/home.jsp\nSAML2.SPEntityId=").concat(n.samlIssuer,"\nSAML2.IdPEntityId=").concat(n.issuer,"\nSAML2.IdPURL=").concat(n.ssoUrl,"\nSAML2SSOURL=samlsso\nEnableSAML2SSOLogin=true\nSAML2.EnableSLO=").concat(o,"\nSAML2.SLOURL=logout\nSkipURIs=/sample-app/index.html\nIndexPage=index.html\nErrorPage=/error.jsp\nSAML2.EnableResponseSigning=").concat(a,"\nSAML2.EnableAssertionSigning=false\nSAML2.EnableAssertionEncryption=").concat(i,"\nSAML2.EnableRequestSigning=").concat(r,"\nSAML2.IsPassiveAuthn=false\nIdPPublicCert=").concat(null===(e=n.certificate)||void 0===e?void 0:e.replace(/(\r\n|\n|\r)/gm,""),"\nKeyStorePassword=wso2carbon\nPrivateKeyAlias=wso2carbon\nIdPPublicCertAlias=wso2carbon\nPrivateKeyPassword=wso2carbon")}}}]);