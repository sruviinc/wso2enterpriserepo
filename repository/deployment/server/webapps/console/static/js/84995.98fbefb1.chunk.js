"use strict";(self.webpackChunk_wso2is_console=self.webpackChunk_wso2is_console||[]).push([[84995,67785],{84995:(n,e,t)=>{t.r(e),t.d(e,{dotNetSDKConfigCode:()=>d,dotNetSDKInstallerConfigCode:()=>g,dotNetSDKLoginCode:()=>m,dotNetSDKLogoutCode:()=>f,dotNetSDKNugetCLICode:()=>p,tomcatOIDCAgentLoginButtonCode:()=>l,tomcatOIDCAgentLogoutCode:()=>s,tomcatOIDCAgentMavenDependencyCode:()=>i,tomcatOIDCAgentSamplePropertiesCode:()=>a,tomcatOIDCAgentSampleWebXMLCode:()=>c,tomcatOIDCSamplePropertiesFileCode:()=>u,wso2InternalRepoPointingCode:()=>r});var o=t(67785),i=function(){return"<dependency>\n    <groupId>io.asgardeo.tomcat.oidc.agent</groupId>\n    <artifactId>io.asgardeo.tomcat.oidc.agent</artifactId>\n    <version>0.1.8</version>\n</dependency>"},r=function(){return"<repositories>\n    <repository>\n        <id>wso2.releases</id>\n        <name>WSO2 internal Repository</name>\n        <url>https://maven.wso2.org/nexus/content/repositories/releases/</url>\n        <releases>\n            <enabled>true</enabled>\n            <updatePolicy>daily</updatePolicy>\n            <checksumPolicy>ignore</checksumPolicy>\n        </releases>\n    </repository>\n    <repository>\n        <id>wso2-nexus</id>\n        <name>WSO2 internal Repository</name>\n        <url>https://maven.wso2.org/nexus/content/groups/wso2-public/</url>\n        <releases>\n            <enabled>true</enabled>\n            <updatePolicy>daily</updatePolicy>\n            <checksumPolicy>ignore</checksumPolicy>\n        </releases>\n    </repository>\n</repositories>"},a=function(n,e){if(!n)return null;var t=e&&""!==e?e:"<YOUR_APP_PATH>";return"consumerKey=".concat(n.clientID,"\nconsumerSecret=").concat(n.clientSecret,"\nscope=").concat(null==n?void 0:n.scope.join(","),"\n\ncallBackURL=").concat(t).concat(o.SDKMeta.tomcatOIDCAgent.integrate.defaultCallbackContext,"\n\nissuer=").concat(n.serverOrigin,"/oauth2/token\nauthorizeEndpoint=").concat(n.serverOrigin,"/oauth2/authorize\nlogoutEndpoint=").concat(n.serverOrigin,"/oidc/logout\ntokenEndpoint=").concat(n.serverOrigin,"/oauth2/token\njwksEndpoint=").concat(n.serverOrigin,"/oauth2/jwks\n\nskipURIs=").concat(t,"/index.html\nlogoutURL=logout")},c=function(){return"<filter>\n    <filter-name>OIDCAgentFilter</filter-name>\n    <filter-class>io.asgardeo.tomcat.oidc.agent.OIDCAgentFilter</filter-class>\n</filter>\n<filter-mapping>\n    <filter-name>OIDCAgentFilter</filter-name>\n    <url-pattern>/logout</url-pattern>\n</filter-mapping>\n<filter-mapping>\n    <filter-name>OIDCAgentFilter</filter-name>\n    <url-pattern>/oauth2client</url-pattern>\n</filter-mapping>\n<filter-mapping>\n    <filter-name>OIDCAgentFilter</filter-name>\n    <url-pattern>*.jsp</url-pattern>\n</filter-mapping>\n<filter-mapping>\n    <filter-name>OIDCAgentFilter</filter-name>\n    <url-pattern>*.html</url-pattern>\n</filter-mapping>\n<listener>\n    <listener-class>io.asgardeo.tomcat.oidc.agent.SSOAgentContextEventListener</listener-class>\n</listener>\n<context-param>\n    <param-name>app-property-file</param-name>\n    <param-value>oidc-sample-app.properties</param-value>\n</context-param>\n<listener>\n    <listener-class>io.asgardeo.tomcat.oidc.agent.JKSLoader</listener-class>\n</listener>"},l=function(){return'<form action="<HOME_PAGE>" method="post">\n    <input type="submit" value="Log In">\n</form>'},s=function(){return'<form action="logout" method="get">\n    <input type="submit" value="Log Out">\n</form>'},u=function(n,e){if(!n)return null;var t=e&&""!==e?e:"<TOMCAT_HOST>";return"consumerKey=".concat(n.clientID,"\nconsumerSecret=").concat(n.clientSecret,"\nscope=openid,address,email,profile\n\ncallBackURL=").concat(t,"/oidc-sample-app/oauth2client\ntrustedAudience=").concat(t,"/oidc-sample-app\n\nissuer=").concat(n.serverOrigin,"/oauth2/token\nauthorizeEndpoint=").concat(n.serverOrigin,"/oauth2/authorize\nlogoutEndpoint=").concat(n.serverOrigin,"/oidc/logout\ntokenEndpoint=").concat(n.serverOrigin,"/oauth2/token\njwksEndpoint=").concat(n.serverOrigin,"/oauth2/jwks\n#sessionIFrameEndpoint=").concat(n.serverOrigin,"/oidc/checksession\n\nskipURIs=/oidc-sample-app/index.html\nindexPage=index.html\nlogoutURL=logout\nerrorPage=error.jsp")},p=function(){return"Install-Package Asgardeo.OIDC.SDK -Version 0.1.1"},d=function(n){return n?'<configuration>\n    <appSettings>\n        <add key="ClientId" value="'.concat(n.clientID,'" />\n        <add key="ClientSecret" value="').concat(n.clientSecret,'" />\n        <add key="AuthorizationEndpoint" value="').concat(n.serverOrigin,'/oauth2/authorize" />\n        <add key="TokenEndpoint" value="').concat(n.serverOrigin,'/oauth2/token" />\n        <add key="UserInfoEndpoint" value="').concat(n.serverOrigin,'/oauth2/userinfo" />\n        <add key="LogoutEndpoint" value="').concat(n.serverOrigin,'/oidc/logout" />\n        <add key="RedirectURI" value="http://localhost:8080/pickup-manager/callback/" />\n        <add key="PostLogoutRedirectURI" value="http://localhost:8080/pickup-manager/postlogout/" />\n        <add key="ClientSettingsProvider.ServiceUri" value="" />\n    </appSettings>\n</configuration>'):null},g=function(n){return n?"Client ID - ".concat(n.clientID,"\nClient Secret - ").concat(n.clientSecret,"\nAuthorization Endpoint - ").concat(n.serverOrigin,"/oauth2/authorize\nToken Endpoint - ").concat(n.serverOrigin,"/oauth2/token\nUserinfo Endpoint - ").concat(n.serverOrigin,"/oauth2/userinfo\nLogout Endpoint - ").concat(n.serverOrigin,"/oidc/logout\nRedirect URI - http://localhost:8080/pickup-manager/callback/\nPostLogout Redirect URI - http://localhost:8080/pickup-manager/postlogout/"):null},m=function(){return"readonly AuthenticationHelper authenticationHelper = new AuthenticationHelper();\nawait authenticationHelper.Login();\nvar accessToken = authenticationHelper.AccessToken;"},f=function(){return"await authenticationHelper.Logout(accessToken);\nvar request = authenticationHelper.Request;"}},67785:(n,e,t)=>{t.r(e),t.d(e,{SDKMeta:()=>r});var o,i=t(69078),r=null===i.applicationConfig||void 0===i.applicationConfig||null===(o=i.applicationConfig.quickstart)||void 0===o?void 0:o.oidcWeb}}]);